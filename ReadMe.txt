1. Для перенаправления в папку паблик запросов к корню существует три способа:
    -Перенести папку паблик в корень и переписать переменные в index.php
    -Создать .htaccess
    -Создать виртуальный хост
        OpenServer -> Дополнительно -> Apache 
        В файле vhost создать новый виртуальный хост
    -В разделе доменов OpenServer указать папку public для домена

2. App - логика программы: модели, контроллеры, фильтры и роутеры
    app - глобальное пространство имен

3. Для создания элементов используется специальная консоль Laravel
4. env - переменные окружения
5. консоль запускается через artisan
6. Метод пост хочет csrf token в midelwear можно это исправить
7. Для необязательных параметров использовать ? после имени параметра
8. php artisan make:controller

9. Шаблонизатор blade считывает разметкку и данные и создает сценарий php для отображения
10. Скомпилированные шаблоны лежат в storage/framevork/views
11. @section ... @endsection - границы выделенной области
12. Для отображения выделенного блока @yeld('name') - отображать 
13. @show вместо @endsection - отобразить в месте где записан блок
14. Для наследования используется директива @extends('path')                                      
15. Для изменения содержимого блока, требуется указать новое содержимое между @section - @endsection
16. Для отображение родительского контента - @parent
17. При передаче скрипта через параметры он представляется ввиде текста
18. Для выполнения скрипта использовать {!! ... !!}
19. Чтобы шаблонизатор blade не обрабатывал команду использовать @
20. Условия @if...[@else[if]]...@endif
21. Циклы @for(;;)...@endfor
          @foreach(data as item)...@endforeach
          @forelse(data as item)...@empty...@forelse если есть ячейки то выполнится как foreach иначе выполнит пункт empty
          @while()...@endwhile
          @each(view, array, 'varName') в цикле передает в указанный вид значения из массива и отображает
22. В AppServiceProvider можно добавить свои дерективы. Указав в его контрукторе Blade::directive('name', function(){});
    Для доступа к Blade необходимо указать в начале use Blade;
23. При обращени к информации запроса,можно указать значение по умолчанию, которое будет отображаться, если в запросе нет запрашиваемого поля
24. Request::has - метод проверяющий наличие ячейки в запросе 
25. Для фильтрации полей запроса используетс Request::only() - выбирает только указанные
                                             Request::except() - выбирает все кроме указанных
26. Для получения URI Request::path
27. Метод Request::is проверяет удовлетворяет ли URI указанному шаблону
28. Метод Request::url возвращает путь без параметров (fullUrl - вместе с параметрами)
29. Для определения типа запроса Request::method (Request:isMethod для проверки совпадает ли запрос с указанным типом)
30. Для сохранения данных(например при определении некорректных данных и перезаполнении формы) используем Request::flash()(flashOnly()/flashExcept() соответственно). Предварительно подключить посредника StartSession
31. Получаем данные с помощью Session 
32. Также для соханения данных можно использовать редирект с расширяющим методом withInput
33. Request::root() - возвращает домен
34. Request::exists() - проверяет присутствует ли в передаваемых данных ячейка с указанным именем ???
35. Request::query() - получает указанный параметра
36. Request::header() - возвращает заголовки
37. Request::server() - возвращает массив настроек сервера
38. Request::segments() - возвращает разбиение запроса
39. Request::flush() - очищает данные в сессии
40. Request::old() - возвращает сохраненные в сессии данные
41. Для передачи объекта на скачивание использовать метод класса response download($file, $name , $headers[], $disposition)
42. RedirectResponse('/target') производет редирект на указанный адрес
43. Или RderiectResponse::create('/target')
44. Можно использовать back() для возврата на предыдущую страницу
45. redirect()-route('home') redirect()->action('Controller@method')
46. В AppServiceProvider в методе boot можно добавить свои ответы
    Response::macro  ('name', function(){
        //some code
    });